       How to Install OpenNSL Binary
       ----------------------------
This document describes how to install OpenNSL binary provided
in this package on the supported SVKs. Refer the Release Notes
for a list of supported SVKs.

CFE:
====
The Linux kernel provided with this package requires CFE bootloader
to be upgraded. These are the instructions to upgrade the CFE on
the switch:

 * Boot the switch and stop at CFE> prompt. If the switch does not
   present a CFE> prompt on bootup, reset the switch and interrupt
   the boot sequence by entering ^C before CFE starts the application.

 * Upgrade the CFE:
     - Copy the cfe.flash.bcm98548xmc file to a tftp server
       that the switch can access.
     - Enter the following at the CFE> prompt:
       CFE> ifconfig eth0 -auto
       CFE> flash <tftp_server_ip>:<file_path>/cfe.flash.bcm98548xmc flash0.boot
     - Reset the switch:
       CFE> reset -sysreset

 * Setup CFE partitions: Enter the following at the CFE> prompt:
     CFE> ptable add cfe0 0x07f00000 0x00100000
     CFE> ptable add linux 0x08000000 0x07b00000
     CFE> ptable add lboot 0x0fb00000 0x400000
     CFE> ptable add cfe1 0x0ff00000 0x100000
     CFE> ptable save
     CFE> reset -sysreset

 * Setup environment variables
   CFE> setenv -p LINUX_CMDLINE "root=/dev/ram rw console=ttyS0,9600 rd_start=0x8000000 rd_size=1000000"


Linux kernel/rootfs Setup:
==========================
To load the Linux uImage via tftp, enter following commands
at CFE> prompt:

  CFE> ifconfig eth0 -auto
  CFE> boot -uboot <tftp_server_ip>:<file_path>/gto_uImage

Alternatively, you can write the Linux kernel/rootfs to the persistent flash:
  CFE> ifconfig -auto eth0
  CFE> flash -noheader <tftp_server_ip>:<file_path>/gto_uImage flash5.lboot
  CFE> setenv -p STARTUP 'boot -uboot flash5.lboot:'
  CFE> reset -sysreset

Once Linux starts, a login prompt will be displayed. Following username and
password should be used to login:
User: root
Password: lvl7dbg

Building OpenNSL
================
Source code for OpenNSL sample applications may be built on the switch. Use the
following steps to compile OpenNSL including sample applications.

1) Extract the code tarball into the destination directory say opennsl_root.

2) Go to output directory. For Broadcom reference platforms, it is
   opennsl_root/opennsl/output/gto-trident-brl20

3) Issue "make" to create an OpenNSL shared library object, linux kernel modules.

Note: OpenNSL requires MAKE version 3.82. MAKE version 4.0 is not supported.
To force the MAKE version, set the following variable.
"export MAKEVER=3.82"

4) The deliverables folder : opennsl_root/opennsl/output/gto-trident-brl20/build
   shall have the following files.
   a) Linux kernel module           : linux-kernel-bde.ko
   b) Linux user module             : linux-user-bde.ko
   c) OpenNSL shared object library : libopennsl.so

Building example Applications
=============================
NOTE: This section is applicable only if the package includes example applications.

The example applications are dynamically linked with the OpenNSL shared library and
are available in the deliverables folder.

Use the following steps to compile example applications.

1) Go to output directory. For Broadcom reference platforms, it is
   opennsl_root/opennsl/output/gto-trident-brl20

2) Issue "make examples" to compile all the sample applications

Downloading and running OpenNSL
===============================
* cd to target directory. To write to persistent flash storage, write to
  /mnt/fastpath.

* Download the SDK kernel modules and configuration files on to the switch:
  # tftp -g -r <file_path>/linux-kernel-bde.ko <tftp_server_ip>
  # tftp -g -r <file_path>/linux-user-bde.ko <tftp_server_ip>

* Download the Shared objects and OpenNSL sample application on the switch:

  # tftp -g -r <file_path>/*.so <tftp_server_ip>
  # cp *.so /lib/
  # tftp -g -r <file_path>/sample_application <tftp_server_ip>
  # chmod 755 sample_application

* cd to target directory and start OpenNSL executable.

  #./sample_application
